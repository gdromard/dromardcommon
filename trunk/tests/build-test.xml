<?xml version="1.0"?>
<project name="Test" basedir="." default="usage">

	
	<!--+
		| Properties
		+-->
	<property environment="env"/>

	<property name="src.dir" 					value="../src" />
	<property name="classes.dir" 				value="classes" />
	<property name="lib.dir" 					value="../lib" />
	
	<property name="test.matrix"				value="Test_Coverage_Matrix.csv" />
	<property name="test.dossier"				value="TestDossier.html" />
	<property name="test.result"				value="TestsResults.html" />
	<property name="emma.enabled" 				value="true" />
	<property name="emma.dir" 					location="emma" />
	<property name="reports.dir" 				location="reports" />
	<property name="lib-test.dir" 				value="lib" />
	<property name="root.package"				value="net.dromard" />

	
	<!-- ############################# PATH ############################# -->


	<!--+
		| Emma Path
		+-->
	<path id="classpath">
		<pathelement path="${classes.dir}"/>
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${lib-test.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>	
	
	
	<!-- ##########################	TASKS DEFINITIONS ########################## -->

	
	<!--+
		| Emma resource
		+-->
	<taskdef resource="emma_ant.properties" classpathref="classpath" />
	
	
	<!-- ##########################	TARGETS ########################## -->
	
	
	<!--+
		| PRINT USAGE 
		+-->
	<target name="usage">
		<echo>
			${application.shortname} build-test file
			-------------------------------------
			Available targets are:
			build       --> build / compile
			run-test    --> Generate the test coverage matrix
			
		</echo>
	</target>

	<!-- ##########################	TESTS ########################## -->
	
	<!--+
		| Runs the tests build
		+-->
	<target name="compile" description="Run JUnit Tests">
		<!-- Clean -->
		<!--<delete dir="${classes.dir}"/>-->
		
		<!-- Compile java files (in separate folder so as to be instrumented by emma) -->
		<mkdir dir="${classes.dir}"/>
		<javac destdir="${classes.dir}" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}"/>
			<classpath refid="classpath"/>
		</javac>
		<copy todir="${classes.dir}" preservelastmodified="true" includeemptydirs="false">
			<fileset defaultexcludes="true" dir="${src.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>	
	
    <target name="run-test" depends="compile" description="Generate the test coverage matrix">
    	<!-- Generate the test matrix CSV file -->
		<javadoc access="private" destdir="${test.matrix}">
			<classpath refid="classpath"/>
			<fileset defaultexcludes="yes" dir="${src.dir}">
				<include name="**/*.java"/>
				<include name="*.java"/>
			</fileset>
			<doclet name="com.cimpa.test.ExtractTestTags" pathref="classpath"/>
        </javadoc>

		<!-- Create Report dir -->
		<mkdir dir="${reports.dir}" />

		<!-- Instrument the .class files. -->     
    	<emma enabled="true" >
	      	<instr instrpath="${classes.dir}" destdir="${classes.dir}" metadatafile="${emma.dir}/metadata.emma" merge="true" mode="overwrite">
				<filter excludes="*.test.*" />
			</instr>
		</emma>
    	
		<java classname="com.cimpa.test.TestDossierRunner" fork="yes" dir="${basedir}">
			<!-- Emma parameters -->
        	<jvmarg value="-Demma.coverage.out.file=${emma.dir}/metadata.emma" />
			<jvmarg value="-Demma.coverage.out.merge=true" />
			<!-- root package -->
			<arg value="${root.package}" />
			<!-- Matrix file generation -->
			<arg value="${test.matrix}" />
			<!-- Test Dossier file path -->
			<arg value="${test.dossier}" />
			<!-- Test Result file path -->
			<arg value="${test.result}" />
			<classpath refid="classpath"/>
		</java>
    	
    	<!-- delete temporary file -->
    	<delete file="${test.matrix}" />
    	
	    <!-- Generate Emma reports. -->
	    <emma enabled="true">
			<report sourcepath="${src.dir}" sort="+name" metrics="method:70,block:80,line:80,class:100">
				<fileset dir="${emma.dir}" >
					<include name="*.emma" />
				</fileset>
				<html outfile="${reports.dir}/coverage.html" depth="method" columns="name,class,method,block,line" />
			</report>
	    </emma>	    	
	    	
	    <fail if="tests.failed">        
		    tests.failed=${tests.failed}
		    ***********************************************************
		    ***********************************************************
		    ****  One or more tests failed!  Check the output ...  ****
		    ***********************************************************
		    ***********************************************************
	    </fail>
    </target>	
</project>