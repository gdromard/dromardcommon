package net.dromard.movies.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

public class GenericDAO {
	private EntityManager em;
	
	@PersistenceContext
	public void setEntityManager(EntityManager em) {
		this.em = em;
	}

	protected EntityManager getEntityManager() {
		if (em == null) throw new IllegalStateException("EntityManager has not been set on before usage");
		return em;
	}

	protected <T> T findById(Class<T> entityClass, int id) {
		T entity = getEntityManager().find(entityClass, id);
		return entity;
	}

	protected <T> T update(T entity) {
		return getEntityManager().merge(entity);
	}

	protected <T> T create(T entity) {
		return getEntityManager().merge(entity);
	}
	
	protected <T> void remove(Class<T> entityClass, int id) {
		getEntityManager().remove(findById(entityClass, id));
	}
	
	@SuppressWarnings("unchecked")
	public <T> List<T> findAll(Class<T> entityClass) {
		return getEntityManager().createQuery("select e from " + entityClass.getName() + " e").getResultList();
	}
	
	public void flush() {
		getEntityManager().flush();
	}

	public void clear() {
		getEntityManager().clear();
	}
}
